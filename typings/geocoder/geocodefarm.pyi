"""
This type stub file was generated by pyright.
"""

from geocoder.base import MultipleResultsQuery, OneResult

class GeocodeFarmResult(OneResult):
    def __init__(self, json_content) -> None:
        ...

    @property
    def lat(self): # -> float | None:
        ...

    @property
    def lng(self): # -> float | None:
        ...

    @property
    def accuracy(self):
        ...

    @property
    def bbox(self): # -> dict[str, list[float]] | dict[Any, Any]:
        ...

    @property
    def address(self):
        ...

    @property
    def housenumber(self):
        ...

    @property
    def street(self):
        ...

    @property
    def neighborhood(self):
        ...

    @property
    def city(self):
        ...

    @property
    def county(self):
        ...

    @property
    def state(self):
        ...

    @property
    def country(self):
        ...

    @property
    def postal(self):
        ...

    @property
    def elevation(self):
        ...

    @property
    def timezone_long(self):
        ...

    @property
    def timezone_short(self):
        ...



class GeocodeFarmQuery(MultipleResultsQuery):
    """
    Geocode.Farm
    ============
    Geocode.Farm is one of the few providers that provide this highly
    specialized service for free. We also have affordable paid plans, of
    course, but our free services are of the same quality and provide the same
    results. The major difference between our affordable paid plans and our
    free API service is the limitations. On one of our affordable paid plans
    your limit is set based on the plan you signed up for, starting at 25,000
    query requests per day (API calls). On our free API offering, you are
    limited to 250 query requests per day (API calls).

    Params
    ------
    :param location: The string to search for. Usually a street address.
    :param key: (optional) API Key. Only Required for Paid Users.
    :param lang: (optional) 2 digit lanuage code to return results in. Currently only "en"(English) or "de"(German) supported.
    :param country: (optional) The country to return results in. Used for biasing purposes and may not fully filter results to this specific country.

    API Reference
    -------------
    https://geocode.farm/geocoding/free-api-documentation/
    """
    provider = ...
    method = ...
    _URL = ...
    _RESULT_CLASS = GeocodeFarmResult
    _KEY = ...
    _KEY_MANDATORY = ...
    def __init__(self, location, **kwargs) -> None:
        ...

    @property
    def access(self): # -> None:
        ...

    @property
    def address_provided(self): # -> None:
        ...

    @property
    def ip_address(self): # -> None:
        ...

    @property
    def distribution_license(self): # -> None:
        ...

    @property
    def usage_limit(self): # -> int | None:
        ...

    @property
    def used_today(self): # -> int | None:
        ...

    @property
    def used_total(self): # -> int | None:
        ...

    @property
    def first_used(self): # -> None:
        ...



if __name__ == '__main__':
    g = ...
