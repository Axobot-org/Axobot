"""
This type stub file was generated by pyright.
"""

options = ...
def get(location, **kwargs): # -> ArcgisQuery | ArcgisReverse | BaiduQuery | BaiduReverse | BingBatchForward | BingBatchReverse | BingQuery | BingQueryDetail | BingReverse | CanadapostQuery | ElevationQuery | FreeGeoIPQuery | GaodeQuery | GaodeReverse | GeocodeFarmReverse | GeolyticaQuery | GeonamesChildren | GeonamesDetails | GeonamesHierarchy | GeonamesQuery | GisgraphyQuery | GisgraphyReverse | GoogleQuery | GoogleReverse | HereQuery | HereReverse | IpinfoQuery | KomootQuery | KomootReverse | LocationIQQuery | LocationIQReverse | MapboxQuery | MapboxReverse | MapquestBatch | MapquestQuery | MapquestReverse | MapzenQuery | MapzenReverse | MaxmindQuery | OpenCageQuery | OpenCageReverse | OsmQuery | OsmQueryDetail | OsmReverse | OttawaQuery | TamuQuery | TgosQuery | TimezoneQuery | TomtomQuery | USCensusBatch | USCensusQuery | USCensusReverse | W3WQuery | W3WReverse | YahooQuery | YandexQuery | YandexReverse | GeocodeFarmQuery | PlacesQuery:
    """Get Geocode

    :param ``location``: Your search location you want geocoded.
    :param ``provider``: The geocoding engine you want to use.

    :param ``method``: Define the method (geocode, method).
    """
    ...

def distance(*args, **kwargs): # -> float:
    """Distance tool measures the distance between two or multiple points.

    :param ``location``: (min 2x locations) Your search location you want geocoded.
    :param ``units``: (default=kilometers) Unit of measurement.
        > kilometers
        > miles
        > feet
        > meters
    """
    ...

def location(location, **kwargs): # -> Location:
    """Parser for different location formats
    """
    ...

def google(location, **kwargs): # -> ArcgisQuery | ArcgisReverse | BaiduQuery | BaiduReverse | BingBatchForward | BingBatchReverse | BingQuery | BingQueryDetail | BingReverse | CanadapostQuery | ElevationQuery | FreeGeoIPQuery | GaodeQuery | GaodeReverse | GeocodeFarmReverse | GeolyticaQuery | GeonamesChildren | GeonamesDetails | GeonamesHierarchy | GeonamesQuery | GisgraphyQuery | GisgraphyReverse | GoogleQuery | GoogleReverse | HereQuery | HereReverse | IpinfoQuery | KomootQuery | KomootReverse | LocationIQQuery | LocationIQReverse | MapboxQuery | MapboxReverse | MapquestBatch | MapquestQuery | MapquestReverse | MapzenQuery | MapzenReverse | MaxmindQuery | OpenCageQuery | OpenCageReverse | OsmQuery | OsmQueryDetail | OsmReverse | OttawaQuery | TamuQuery | TgosQuery | TimezoneQuery | TomtomQuery | USCensusBatch | USCensusQuery | USCensusReverse | W3WQuery | W3WReverse | YahooQuery | YandexQuery | YandexReverse | GeocodeFarmQuery | PlacesQuery:
    """Google Provider

    :param ``location``: Your search location you want geocoded.
    :param ``method``: (default=geocode) Use the following:
        > geocode
        > places
        > reverse
        > batch
        > timezone
        > elevation
    """
    ...

def mapbox(location, **kwargs): # -> ArcgisQuery | ArcgisReverse | BaiduQuery | BaiduReverse | BingBatchForward | BingBatchReverse | BingQuery | BingQueryDetail | BingReverse | CanadapostQuery | ElevationQuery | FreeGeoIPQuery | GaodeQuery | GaodeReverse | GeocodeFarmReverse | GeolyticaQuery | GeonamesChildren | GeonamesDetails | GeonamesHierarchy | GeonamesQuery | GisgraphyQuery | GisgraphyReverse | GoogleQuery | GoogleReverse | HereQuery | HereReverse | IpinfoQuery | KomootQuery | KomootReverse | LocationIQQuery | LocationIQReverse | MapboxQuery | MapboxReverse | MapquestBatch | MapquestQuery | MapquestReverse | MapzenQuery | MapzenReverse | MaxmindQuery | OpenCageQuery | OpenCageReverse | OsmQuery | OsmQueryDetail | OsmReverse | OttawaQuery | TamuQuery | TgosQuery | TimezoneQuery | TomtomQuery | USCensusBatch | USCensusQuery | USCensusReverse | W3WQuery | W3WReverse | YahooQuery | YandexQuery | YandexReverse | GeocodeFarmQuery | PlacesQuery:
    """Mapbox Provider

    :param ``location``: Your search location you want geocoded.
    :param ``proximity``: Search nearby [lat, lng]
    :param ``method``: (default=geocode) Use the following:
        > geocode
        > reverse
        > batch
    """
    ...

def yandex(location, **kwargs): # -> ArcgisQuery | ArcgisReverse | BaiduQuery | BaiduReverse | BingBatchForward | BingBatchReverse | BingQuery | BingQueryDetail | BingReverse | CanadapostQuery | ElevationQuery | FreeGeoIPQuery | GaodeQuery | GaodeReverse | GeocodeFarmReverse | GeolyticaQuery | GeonamesChildren | GeonamesDetails | GeonamesHierarchy | GeonamesQuery | GisgraphyQuery | GisgraphyReverse | GoogleQuery | GoogleReverse | HereQuery | HereReverse | IpinfoQuery | KomootQuery | KomootReverse | LocationIQQuery | LocationIQReverse | MapboxQuery | MapboxReverse | MapquestBatch | MapquestQuery | MapquestReverse | MapzenQuery | MapzenReverse | MaxmindQuery | OpenCageQuery | OpenCageReverse | OsmQuery | OsmQueryDetail | OsmReverse | OttawaQuery | TamuQuery | TgosQuery | TimezoneQuery | TomtomQuery | USCensusBatch | USCensusQuery | USCensusReverse | W3WQuery | W3WReverse | YahooQuery | YandexQuery | YandexReverse | GeocodeFarmQuery | PlacesQuery:
    """Yandex Provider

    :param ``location``: Your search location you want geocoded.
    :param ``maxRows``: (default=1) Max number of results to fetch
    :param ``lang``: Chose the following language:
        > ru-RU — Russian (by default)
        > uk-UA — Ukrainian
        > be-BY — Belarusian
        > en-US — American English
        > en-BR — British English
        > tr-TR — Turkish (only for maps of Turkey)
    :param ``kind``: Type of toponym (only for reverse geocoding):
        > house - house or building
        > street - street
        > metro - subway station
        > district - city district
        > locality - locality (city, town, village, etc.)
    """
    ...

def w3w(location, **kwargs): # -> ArcgisQuery | ArcgisReverse | BaiduQuery | BaiduReverse | BingBatchForward | BingBatchReverse | BingQuery | BingQueryDetail | BingReverse | CanadapostQuery | ElevationQuery | FreeGeoIPQuery | GaodeQuery | GaodeReverse | GeocodeFarmReverse | GeolyticaQuery | GeonamesChildren | GeonamesDetails | GeonamesHierarchy | GeonamesQuery | GisgraphyQuery | GisgraphyReverse | GoogleQuery | GoogleReverse | HereQuery | HereReverse | IpinfoQuery | KomootQuery | KomootReverse | LocationIQQuery | LocationIQReverse | MapboxQuery | MapboxReverse | MapquestBatch | MapquestQuery | MapquestReverse | MapzenQuery | MapzenReverse | MaxmindQuery | OpenCageQuery | OpenCageReverse | OsmQuery | OsmQueryDetail | OsmReverse | OttawaQuery | TamuQuery | TgosQuery | TimezoneQuery | TomtomQuery | USCensusBatch | USCensusQuery | USCensusReverse | W3WQuery | W3WReverse | YahooQuery | YandexQuery | YandexReverse | GeocodeFarmQuery | PlacesQuery:
    """what3words Provider

    :param ``location``: Your search location you want geocoded.
    :param ``key``: W3W API key.
    :param ``method``: Chose a method (geocode, method)
    """
    ...

def baidu(location, **kwargs): # -> ArcgisQuery | ArcgisReverse | BaiduQuery | BaiduReverse | BingBatchForward | BingBatchReverse | BingQuery | BingQueryDetail | BingReverse | CanadapostQuery | ElevationQuery | FreeGeoIPQuery | GaodeQuery | GaodeReverse | GeocodeFarmReverse | GeolyticaQuery | GeonamesChildren | GeonamesDetails | GeonamesHierarchy | GeonamesQuery | GisgraphyQuery | GisgraphyReverse | GoogleQuery | GoogleReverse | HereQuery | HereReverse | IpinfoQuery | KomootQuery | KomootReverse | LocationIQQuery | LocationIQReverse | MapboxQuery | MapboxReverse | MapquestBatch | MapquestQuery | MapquestReverse | MapzenQuery | MapzenReverse | MaxmindQuery | OpenCageQuery | OpenCageReverse | OsmQuery | OsmQueryDetail | OsmReverse | OttawaQuery | TamuQuery | TgosQuery | TimezoneQuery | TomtomQuery | USCensusBatch | USCensusQuery | USCensusReverse | W3WQuery | W3WReverse | YahooQuery | YandexQuery | YandexReverse | GeocodeFarmQuery | PlacesQuery:
    """Baidu Provider

    :param ``location``: Your search location you want geocoded.
    :param ``key``: Baidu API key.
    :param ``referer``: Baidu API referer website.
    """
    ...

def gaode(location, **kwargs): # -> ArcgisQuery | ArcgisReverse | BaiduQuery | BaiduReverse | BingBatchForward | BingBatchReverse | BingQuery | BingQueryDetail | BingReverse | CanadapostQuery | ElevationQuery | FreeGeoIPQuery | GaodeQuery | GaodeReverse | GeocodeFarmReverse | GeolyticaQuery | GeonamesChildren | GeonamesDetails | GeonamesHierarchy | GeonamesQuery | GisgraphyQuery | GisgraphyReverse | GoogleQuery | GoogleReverse | HereQuery | HereReverse | IpinfoQuery | KomootQuery | KomootReverse | LocationIQQuery | LocationIQReverse | MapboxQuery | MapboxReverse | MapquestBatch | MapquestQuery | MapquestReverse | MapzenQuery | MapzenReverse | MaxmindQuery | OpenCageQuery | OpenCageReverse | OsmQuery | OsmQueryDetail | OsmReverse | OttawaQuery | TamuQuery | TgosQuery | TimezoneQuery | TomtomQuery | USCensusBatch | USCensusQuery | USCensusReverse | W3WQuery | W3WReverse | YahooQuery | YandexQuery | YandexReverse | GeocodeFarmQuery | PlacesQuery:
    """Gaode Provider

    :param ``location``: Your search location you want geocoded.
    :param ``key``: Gaode API key.
    :param ``referer``: Gaode API referer website.
    """
    ...

def komoot(location, **kwargs): # -> ArcgisQuery | ArcgisReverse | BaiduQuery | BaiduReverse | BingBatchForward | BingBatchReverse | BingQuery | BingQueryDetail | BingReverse | CanadapostQuery | ElevationQuery | FreeGeoIPQuery | GaodeQuery | GaodeReverse | GeocodeFarmReverse | GeolyticaQuery | GeonamesChildren | GeonamesDetails | GeonamesHierarchy | GeonamesQuery | GisgraphyQuery | GisgraphyReverse | GoogleQuery | GoogleReverse | HereQuery | HereReverse | IpinfoQuery | KomootQuery | KomootReverse | LocationIQQuery | LocationIQReverse | MapboxQuery | MapboxReverse | MapquestBatch | MapquestQuery | MapquestReverse | MapzenQuery | MapzenReverse | MaxmindQuery | OpenCageQuery | OpenCageReverse | OsmQuery | OsmQueryDetail | OsmReverse | OttawaQuery | TamuQuery | TgosQuery | TimezoneQuery | TomtomQuery | USCensusBatch | USCensusQuery | USCensusReverse | W3WQuery | W3WReverse | YahooQuery | YandexQuery | YandexReverse | GeocodeFarmQuery | PlacesQuery:
    """Ottawa Provider

    :param ``location``: Your search location you want geocoded.
    """
    ...

def ottawa(location, **kwargs): # -> ArcgisQuery | ArcgisReverse | BaiduQuery | BaiduReverse | BingBatchForward | BingBatchReverse | BingQuery | BingQueryDetail | BingReverse | CanadapostQuery | ElevationQuery | FreeGeoIPQuery | GaodeQuery | GaodeReverse | GeocodeFarmReverse | GeolyticaQuery | GeonamesChildren | GeonamesDetails | GeonamesHierarchy | GeonamesQuery | GisgraphyQuery | GisgraphyReverse | GoogleQuery | GoogleReverse | HereQuery | HereReverse | IpinfoQuery | KomootQuery | KomootReverse | LocationIQQuery | LocationIQReverse | MapboxQuery | MapboxReverse | MapquestBatch | MapquestQuery | MapquestReverse | MapzenQuery | MapzenReverse | MaxmindQuery | OpenCageQuery | OpenCageReverse | OsmQuery | OsmQueryDetail | OsmReverse | OttawaQuery | TamuQuery | TgosQuery | TimezoneQuery | TomtomQuery | USCensusBatch | USCensusQuery | USCensusReverse | W3WQuery | W3WReverse | YahooQuery | YandexQuery | YandexReverse | GeocodeFarmQuery | PlacesQuery:
    """Ottawa Provider

    :param ``location``: Your search location you want geocoded.
    :param ``maxRows``: (default=1) Max number of results to fetch
    """
    ...

def elevation(location, **kwargs): # -> ArcgisQuery | ArcgisReverse | BaiduQuery | BaiduReverse | BingBatchForward | BingBatchReverse | BingQuery | BingQueryDetail | BingReverse | CanadapostQuery | ElevationQuery | FreeGeoIPQuery | GaodeQuery | GaodeReverse | GeocodeFarmReverse | GeolyticaQuery | GeonamesChildren | GeonamesDetails | GeonamesHierarchy | GeonamesQuery | GisgraphyQuery | GisgraphyReverse | GoogleQuery | GoogleReverse | HereQuery | HereReverse | IpinfoQuery | KomootQuery | KomootReverse | LocationIQQuery | LocationIQReverse | MapboxQuery | MapboxReverse | MapquestBatch | MapquestQuery | MapquestReverse | MapzenQuery | MapzenReverse | MaxmindQuery | OpenCageQuery | OpenCageReverse | OsmQuery | OsmQueryDetail | OsmReverse | OttawaQuery | TamuQuery | TgosQuery | TimezoneQuery | TomtomQuery | USCensusBatch | USCensusQuery | USCensusReverse | W3WQuery | W3WReverse | YahooQuery | YandexQuery | YandexReverse | GeocodeFarmQuery | PlacesQuery:
    """Elevation - Google Provider

    :param ``location``: Your search location you want to retrieve elevation data.
    """
    ...

def places(location, **kwargs): # -> ArcgisQuery | ArcgisReverse | BaiduQuery | BaiduReverse | BingBatchForward | BingBatchReverse | BingQuery | BingQueryDetail | BingReverse | CanadapostQuery | ElevationQuery | FreeGeoIPQuery | GaodeQuery | GaodeReverse | GeocodeFarmReverse | GeolyticaQuery | GeonamesChildren | GeonamesDetails | GeonamesHierarchy | GeonamesQuery | GisgraphyQuery | GisgraphyReverse | GoogleQuery | GoogleReverse | HereQuery | HereReverse | IpinfoQuery | KomootQuery | KomootReverse | LocationIQQuery | LocationIQReverse | MapboxQuery | MapboxReverse | MapquestBatch | MapquestQuery | MapquestReverse | MapzenQuery | MapzenReverse | MaxmindQuery | OpenCageQuery | OpenCageReverse | OsmQuery | OsmQueryDetail | OsmReverse | OttawaQuery | TamuQuery | TgosQuery | TimezoneQuery | TomtomQuery | USCensusBatch | USCensusQuery | USCensusReverse | W3WQuery | W3WReverse | YahooQuery | YandexQuery | YandexReverse | GeocodeFarmQuery | PlacesQuery:
    """Places - Google Provider

    :param ``location``: Your search location you want geocoded.
    :param ``proximity``: Search within given area (bbox, bounds, or around latlng)
    """
    ...

def timezone(location, **kwargs): # -> ArcgisQuery | ArcgisReverse | BaiduQuery | BaiduReverse | BingBatchForward | BingBatchReverse | BingQuery | BingQueryDetail | BingReverse | CanadapostQuery | ElevationQuery | FreeGeoIPQuery | GaodeQuery | GaodeReverse | GeocodeFarmReverse | GeolyticaQuery | GeonamesChildren | GeonamesDetails | GeonamesHierarchy | GeonamesQuery | GisgraphyQuery | GisgraphyReverse | GoogleQuery | GoogleReverse | HereQuery | HereReverse | IpinfoQuery | KomootQuery | KomootReverse | LocationIQQuery | LocationIQReverse | MapboxQuery | MapboxReverse | MapquestBatch | MapquestQuery | MapquestReverse | MapzenQuery | MapzenReverse | MaxmindQuery | OpenCageQuery | OpenCageReverse | OsmQuery | OsmQueryDetail | OsmReverse | OttawaQuery | TamuQuery | TgosQuery | TimezoneQuery | TomtomQuery | USCensusBatch | USCensusQuery | USCensusReverse | W3WQuery | W3WReverse | YahooQuery | YandexQuery | YandexReverse | GeocodeFarmQuery | PlacesQuery:
    """Timezone - Google Provider

    :param ``location``: Your search location you want to retrieve timezone data.
    :param ``timestamp``: Define your own specified time to calculate timezone.
    """
    ...

def reverse(location, provider=..., **kwargs): # -> ArcgisQuery | ArcgisReverse | BaiduQuery | BaiduReverse | BingBatchForward | BingBatchReverse | BingQuery | BingQueryDetail | BingReverse | CanadapostQuery | ElevationQuery | FreeGeoIPQuery | GaodeQuery | GaodeReverse | GeocodeFarmReverse | GeolyticaQuery | GeonamesChildren | GeonamesDetails | GeonamesHierarchy | GeonamesQuery | GisgraphyQuery | GisgraphyReverse | GoogleQuery | GoogleReverse | HereQuery | HereReverse | IpinfoQuery | KomootQuery | KomootReverse | LocationIQQuery | LocationIQReverse | MapboxQuery | MapboxReverse | MapquestBatch | MapquestQuery | MapquestReverse | MapzenQuery | MapzenReverse | MaxmindQuery | OpenCageQuery | OpenCageReverse | OsmQuery | OsmQueryDetail | OsmReverse | OttawaQuery | TamuQuery | TgosQuery | TimezoneQuery | TomtomQuery | USCensusBatch | USCensusQuery | USCensusReverse | W3WQuery | W3WReverse | YahooQuery | YandexQuery | YandexReverse | GeocodeFarmQuery | PlacesQuery:
    """Reverse Geocoding

    :param ``location``: Your search location you want to reverse geocode.
    :param ``key``: (optional) use your own API Key from Bing.
    :param ``provider``: (default=google) Use the following:
        > google
        > bing
    """
    ...

def bing(location, **kwargs): # -> ArcgisQuery | ArcgisReverse | BaiduQuery | BaiduReverse | BingBatchForward | BingBatchReverse | BingQuery | BingQueryDetail | BingReverse | CanadapostQuery | ElevationQuery | FreeGeoIPQuery | GaodeQuery | GaodeReverse | GeocodeFarmReverse | GeolyticaQuery | GeonamesChildren | GeonamesDetails | GeonamesHierarchy | GeonamesQuery | GisgraphyQuery | GisgraphyReverse | GoogleQuery | GoogleReverse | HereQuery | HereReverse | IpinfoQuery | KomootQuery | KomootReverse | LocationIQQuery | LocationIQReverse | MapboxQuery | MapboxReverse | MapquestBatch | MapquestQuery | MapquestReverse | MapzenQuery | MapzenReverse | MaxmindQuery | OpenCageQuery | OpenCageReverse | OsmQuery | OsmQueryDetail | OsmReverse | OttawaQuery | TamuQuery | TgosQuery | TimezoneQuery | TomtomQuery | USCensusBatch | USCensusQuery | USCensusReverse | W3WQuery | W3WReverse | YahooQuery | YandexQuery | YandexReverse | GeocodeFarmQuery | PlacesQuery:
    """Bing Provider

    :param ``location``: Your search location you want geocoded.
    :param ``key``: (optional) use your own API Key from Bing.
    :param ``maxRows``: (default=1) Max number of results to fetch
    :param ``method``: (default=geocode) Use the following:
        > geocode
        > reverse
    """
    ...

def yahoo(location, **kwargs): # -> ArcgisQuery | ArcgisReverse | BaiduQuery | BaiduReverse | BingBatchForward | BingBatchReverse | BingQuery | BingQueryDetail | BingReverse | CanadapostQuery | ElevationQuery | FreeGeoIPQuery | GaodeQuery | GaodeReverse | GeocodeFarmReverse | GeolyticaQuery | GeonamesChildren | GeonamesDetails | GeonamesHierarchy | GeonamesQuery | GisgraphyQuery | GisgraphyReverse | GoogleQuery | GoogleReverse | HereQuery | HereReverse | IpinfoQuery | KomootQuery | KomootReverse | LocationIQQuery | LocationIQReverse | MapboxQuery | MapboxReverse | MapquestBatch | MapquestQuery | MapquestReverse | MapzenQuery | MapzenReverse | MaxmindQuery | OpenCageQuery | OpenCageReverse | OsmQuery | OsmQueryDetail | OsmReverse | OttawaQuery | TamuQuery | TgosQuery | TimezoneQuery | TomtomQuery | USCensusBatch | USCensusQuery | USCensusReverse | W3WQuery | W3WReverse | YahooQuery | YandexQuery | YandexReverse | GeocodeFarmQuery | PlacesQuery:
    """Yahoo Provider

    :param ``location``: Your search location you want geocoded.
    """
    ...

def geolytica(location, **kwargs): # -> ArcgisQuery | ArcgisReverse | BaiduQuery | BaiduReverse | BingBatchForward | BingBatchReverse | BingQuery | BingQueryDetail | BingReverse | CanadapostQuery | ElevationQuery | FreeGeoIPQuery | GaodeQuery | GaodeReverse | GeocodeFarmReverse | GeolyticaQuery | GeonamesChildren | GeonamesDetails | GeonamesHierarchy | GeonamesQuery | GisgraphyQuery | GisgraphyReverse | GoogleQuery | GoogleReverse | HereQuery | HereReverse | IpinfoQuery | KomootQuery | KomootReverse | LocationIQQuery | LocationIQReverse | MapboxQuery | MapboxReverse | MapquestBatch | MapquestQuery | MapquestReverse | MapzenQuery | MapzenReverse | MaxmindQuery | OpenCageQuery | OpenCageReverse | OsmQuery | OsmQueryDetail | OsmReverse | OttawaQuery | TamuQuery | TgosQuery | TimezoneQuery | TomtomQuery | USCensusBatch | USCensusQuery | USCensusReverse | W3WQuery | W3WReverse | YahooQuery | YandexQuery | YandexReverse | GeocodeFarmQuery | PlacesQuery:
    """Geolytica (Geocoder.ca) Provider

    :param ``location``: Your search location you want geocoded.
    """
    ...

def opencage(location, **kwargs): # -> ArcgisQuery | ArcgisReverse | BaiduQuery | BaiduReverse | BingBatchForward | BingBatchReverse | BingQuery | BingQueryDetail | BingReverse | CanadapostQuery | ElevationQuery | FreeGeoIPQuery | GaodeQuery | GaodeReverse | GeocodeFarmReverse | GeolyticaQuery | GeonamesChildren | GeonamesDetails | GeonamesHierarchy | GeonamesQuery | GisgraphyQuery | GisgraphyReverse | GoogleQuery | GoogleReverse | HereQuery | HereReverse | IpinfoQuery | KomootQuery | KomootReverse | LocationIQQuery | LocationIQReverse | MapboxQuery | MapboxReverse | MapquestBatch | MapquestQuery | MapquestReverse | MapzenQuery | MapzenReverse | MaxmindQuery | OpenCageQuery | OpenCageReverse | OsmQuery | OsmQueryDetail | OsmReverse | OttawaQuery | TamuQuery | TgosQuery | TimezoneQuery | TomtomQuery | USCensusBatch | USCensusQuery | USCensusReverse | W3WQuery | W3WReverse | YahooQuery | YandexQuery | YandexReverse | GeocodeFarmQuery | PlacesQuery:
    """Opencage Provider

    :param ``location``: Your search location you want geocoded.
    :param ``key``: (optional) use your own API Key from OpenCage.
    """
    ...

def arcgis(location, **kwargs): # -> ArcgisQuery | ArcgisReverse | BaiduQuery | BaiduReverse | BingBatchForward | BingBatchReverse | BingQuery | BingQueryDetail | BingReverse | CanadapostQuery | ElevationQuery | FreeGeoIPQuery | GaodeQuery | GaodeReverse | GeocodeFarmReverse | GeolyticaQuery | GeonamesChildren | GeonamesDetails | GeonamesHierarchy | GeonamesQuery | GisgraphyQuery | GisgraphyReverse | GoogleQuery | GoogleReverse | HereQuery | HereReverse | IpinfoQuery | KomootQuery | KomootReverse | LocationIQQuery | LocationIQReverse | MapboxQuery | MapboxReverse | MapquestBatch | MapquestQuery | MapquestReverse | MapzenQuery | MapzenReverse | MaxmindQuery | OpenCageQuery | OpenCageReverse | OsmQuery | OsmQueryDetail | OsmReverse | OttawaQuery | TamuQuery | TgosQuery | TimezoneQuery | TomtomQuery | USCensusBatch | USCensusQuery | USCensusReverse | W3WQuery | W3WReverse | YahooQuery | YandexQuery | YandexReverse | GeocodeFarmQuery | PlacesQuery:
    """ArcGIS Provider

    :param ``location``: Your search location you want geocoded.
    """
    ...

def here(location, **kwargs): # -> ArcgisQuery | ArcgisReverse | BaiduQuery | BaiduReverse | BingBatchForward | BingBatchReverse | BingQuery | BingQueryDetail | BingReverse | CanadapostQuery | ElevationQuery | FreeGeoIPQuery | GaodeQuery | GaodeReverse | GeocodeFarmReverse | GeolyticaQuery | GeonamesChildren | GeonamesDetails | GeonamesHierarchy | GeonamesQuery | GisgraphyQuery | GisgraphyReverse | GoogleQuery | GoogleReverse | HereQuery | HereReverse | IpinfoQuery | KomootQuery | KomootReverse | LocationIQQuery | LocationIQReverse | MapboxQuery | MapboxReverse | MapquestBatch | MapquestQuery | MapquestReverse | MapzenQuery | MapzenReverse | MaxmindQuery | OpenCageQuery | OpenCageReverse | OsmQuery | OsmQueryDetail | OsmReverse | OttawaQuery | TamuQuery | TgosQuery | TimezoneQuery | TomtomQuery | USCensusBatch | USCensusQuery | USCensusReverse | W3WQuery | W3WReverse | YahooQuery | YandexQuery | YandexReverse | GeocodeFarmQuery | PlacesQuery:
    """HERE Provider

    :param ``location``: Your search location you want geocoded.
    :param ``app_code``: (optional) use your own Application Code from HERE.
    :param ``app_id``: (optional) use your own Application ID from HERE.
    :param ``maxRows``: (default=1) Max number of results to fetch
    :param ``method``: (default=geocode) Use the following:
        > geocode
        > reverse
    """
    ...

def nokia(location, **kwargs): # -> ArcgisQuery | ArcgisReverse | BaiduQuery | BaiduReverse | BingBatchForward | BingBatchReverse | BingQuery | BingQueryDetail | BingReverse | CanadapostQuery | ElevationQuery | FreeGeoIPQuery | GaodeQuery | GaodeReverse | GeocodeFarmReverse | GeolyticaQuery | GeonamesChildren | GeonamesDetails | GeonamesHierarchy | GeonamesQuery | GisgraphyQuery | GisgraphyReverse | GoogleQuery | GoogleReverse | HereQuery | HereReverse | IpinfoQuery | KomootQuery | KomootReverse | LocationIQQuery | LocationIQReverse | MapboxQuery | MapboxReverse | MapquestBatch | MapquestQuery | MapquestReverse | MapzenQuery | MapzenReverse | MaxmindQuery | OpenCageQuery | OpenCageReverse | OsmQuery | OsmQueryDetail | OsmReverse | OttawaQuery | TamuQuery | TgosQuery | TimezoneQuery | TomtomQuery | USCensusBatch | USCensusQuery | USCensusReverse | W3WQuery | W3WReverse | YahooQuery | YandexQuery | YandexReverse | GeocodeFarmQuery | PlacesQuery:
    """HERE Provider

    :param ``location``: Your search location you want geocoded.
    :param ``app_code``: (optional) use your own Application Code from HERE.
    :param ``app_id``: (optional) use your own Application ID from HERE.
    :param ``method``: (default=geocode) Use the following:
        > geocode
        > reverse
    """
    ...

def tomtom(location, **kwargs): # -> ArcgisQuery | ArcgisReverse | BaiduQuery | BaiduReverse | BingBatchForward | BingBatchReverse | BingQuery | BingQueryDetail | BingReverse | CanadapostQuery | ElevationQuery | FreeGeoIPQuery | GaodeQuery | GaodeReverse | GeocodeFarmReverse | GeolyticaQuery | GeonamesChildren | GeonamesDetails | GeonamesHierarchy | GeonamesQuery | GisgraphyQuery | GisgraphyReverse | GoogleQuery | GoogleReverse | HereQuery | HereReverse | IpinfoQuery | KomootQuery | KomootReverse | LocationIQQuery | LocationIQReverse | MapboxQuery | MapboxReverse | MapquestBatch | MapquestQuery | MapquestReverse | MapzenQuery | MapzenReverse | MaxmindQuery | OpenCageQuery | OpenCageReverse | OsmQuery | OsmQueryDetail | OsmReverse | OttawaQuery | TamuQuery | TgosQuery | TimezoneQuery | TomtomQuery | USCensusBatch | USCensusQuery | USCensusReverse | W3WQuery | W3WReverse | YahooQuery | YandexQuery | YandexReverse | GeocodeFarmQuery | PlacesQuery:
    """TomTom Provider

    :param ``location``: Your search location you want geocoded.
    :param ``key``: (optional) use your own API Key from TomTom.
    :param ``maxRows``: (default=1) Max number of results to fetch
    """
    ...

def mapquest(location, **kwargs): # -> ArcgisQuery | ArcgisReverse | BaiduQuery | BaiduReverse | BingBatchForward | BingBatchReverse | BingQuery | BingQueryDetail | BingReverse | CanadapostQuery | ElevationQuery | FreeGeoIPQuery | GaodeQuery | GaodeReverse | GeocodeFarmReverse | GeolyticaQuery | GeonamesChildren | GeonamesDetails | GeonamesHierarchy | GeonamesQuery | GisgraphyQuery | GisgraphyReverse | GoogleQuery | GoogleReverse | HereQuery | HereReverse | IpinfoQuery | KomootQuery | KomootReverse | LocationIQQuery | LocationIQReverse | MapboxQuery | MapboxReverse | MapquestBatch | MapquestQuery | MapquestReverse | MapzenQuery | MapzenReverse | MaxmindQuery | OpenCageQuery | OpenCageReverse | OsmQuery | OsmQueryDetail | OsmReverse | OttawaQuery | TamuQuery | TgosQuery | TimezoneQuery | TomtomQuery | USCensusBatch | USCensusQuery | USCensusReverse | W3WQuery | W3WReverse | YahooQuery | YandexQuery | YandexReverse | GeocodeFarmQuery | PlacesQuery:
    """MapQuest Provider

    :param ``location``: Your search location you want geocoded.
    :param ``key``: (optional) use your own API Key from MapQuest.
    :param ``maxRows``: (default=1) Max number of results to fetch
    :param ``method``: (default=geocode) Use the following:
        > geocode
        > reverse
    """
    ...

def osm(location, **kwargs): # -> ArcgisQuery | ArcgisReverse | BaiduQuery | BaiduReverse | BingBatchForward | BingBatchReverse | BingQuery | BingQueryDetail | BingReverse | CanadapostQuery | ElevationQuery | FreeGeoIPQuery | GaodeQuery | GaodeReverse | GeocodeFarmReverse | GeolyticaQuery | GeonamesChildren | GeonamesDetails | GeonamesHierarchy | GeonamesQuery | GisgraphyQuery | GisgraphyReverse | GoogleQuery | GoogleReverse | HereQuery | HereReverse | IpinfoQuery | KomootQuery | KomootReverse | LocationIQQuery | LocationIQReverse | MapboxQuery | MapboxReverse | MapquestBatch | MapquestQuery | MapquestReverse | MapzenQuery | MapzenReverse | MaxmindQuery | OpenCageQuery | OpenCageReverse | OsmQuery | OsmQueryDetail | OsmReverse | OttawaQuery | TamuQuery | TgosQuery | TimezoneQuery | TomtomQuery | USCensusBatch | USCensusQuery | USCensusReverse | W3WQuery | W3WReverse | YahooQuery | YandexQuery | YandexReverse | GeocodeFarmQuery | PlacesQuery:
    """OSM Provider

    :param ``location``: Your search location you want geocoded.
    :param ``url``: Custom OSM Server URL location
               (ex: http://nominatim.openstreetmap.org/search)
    """
    ...

def maxmind(location=..., **kwargs): # -> ArcgisQuery | ArcgisReverse | BaiduQuery | BaiduReverse | BingBatchForward | BingBatchReverse | BingQuery | BingQueryDetail | BingReverse | CanadapostQuery | ElevationQuery | FreeGeoIPQuery | GaodeQuery | GaodeReverse | GeocodeFarmReverse | GeolyticaQuery | GeonamesChildren | GeonamesDetails | GeonamesHierarchy | GeonamesQuery | GisgraphyQuery | GisgraphyReverse | GoogleQuery | GoogleReverse | HereQuery | HereReverse | IpinfoQuery | KomootQuery | KomootReverse | LocationIQQuery | LocationIQReverse | MapboxQuery | MapboxReverse | MapquestBatch | MapquestQuery | MapquestReverse | MapzenQuery | MapzenReverse | MaxmindQuery | OpenCageQuery | OpenCageReverse | OsmQuery | OsmQueryDetail | OsmReverse | OttawaQuery | TamuQuery | TgosQuery | TimezoneQuery | TomtomQuery | USCensusBatch | USCensusQuery | USCensusReverse | W3WQuery | W3WReverse | YahooQuery | YandexQuery | YandexReverse | GeocodeFarmQuery | PlacesQuery:
    """MaxMind Provider

    :param ``location``: Your search IP Address you want geocoded.
    :param ``location``: (optional) if left blank will return your
                                current IP address's location.
    """
    ...

def ipinfo(location=..., **kwargs): # -> ArcgisQuery | ArcgisReverse | BaiduQuery | BaiduReverse | BingBatchForward | BingBatchReverse | BingQuery | BingQueryDetail | BingReverse | CanadapostQuery | ElevationQuery | FreeGeoIPQuery | GaodeQuery | GaodeReverse | GeocodeFarmReverse | GeolyticaQuery | GeonamesChildren | GeonamesDetails | GeonamesHierarchy | GeonamesQuery | GisgraphyQuery | GisgraphyReverse | GoogleQuery | GoogleReverse | HereQuery | HereReverse | IpinfoQuery | KomootQuery | KomootReverse | LocationIQQuery | LocationIQReverse | MapboxQuery | MapboxReverse | MapquestBatch | MapquestQuery | MapquestReverse | MapzenQuery | MapzenReverse | MaxmindQuery | OpenCageQuery | OpenCageReverse | OsmQuery | OsmQueryDetail | OsmReverse | OttawaQuery | TamuQuery | TgosQuery | TimezoneQuery | TomtomQuery | USCensusBatch | USCensusQuery | USCensusReverse | W3WQuery | W3WReverse | YahooQuery | YandexQuery | YandexReverse | GeocodeFarmQuery | PlacesQuery:
    """IP Info.io Provider

    :param ``location``: Your search IP Address you want geocoded.
    :param ``location``: (optional) if left blank will return your
                                current IP address's location.
    """
    ...

def freegeoip(location, **kwargs): # -> ArcgisQuery | ArcgisReverse | BaiduQuery | BaiduReverse | BingBatchForward | BingBatchReverse | BingQuery | BingQueryDetail | BingReverse | CanadapostQuery | ElevationQuery | FreeGeoIPQuery | GaodeQuery | GaodeReverse | GeocodeFarmReverse | GeolyticaQuery | GeonamesChildren | GeonamesDetails | GeonamesHierarchy | GeonamesQuery | GisgraphyQuery | GisgraphyReverse | GoogleQuery | GoogleReverse | HereQuery | HereReverse | IpinfoQuery | KomootQuery | KomootReverse | LocationIQQuery | LocationIQReverse | MapboxQuery | MapboxReverse | MapquestBatch | MapquestQuery | MapquestReverse | MapzenQuery | MapzenReverse | MaxmindQuery | OpenCageQuery | OpenCageReverse | OsmQuery | OsmQueryDetail | OsmReverse | OttawaQuery | TamuQuery | TgosQuery | TimezoneQuery | TomtomQuery | USCensusBatch | USCensusQuery | USCensusReverse | W3WQuery | W3WReverse | YahooQuery | YandexQuery | YandexReverse | GeocodeFarmQuery | PlacesQuery:
    """FreeGeoIP Provider

    :param ``location``: Your search IP Address you want geocoded.
    :param ``location``: (optional) if left blank will return your
                                current IP address's location.
    """
    ...

def ip(location, **kwargs): # -> ArcgisQuery | ArcgisReverse | BaiduQuery | BaiduReverse | BingBatchForward | BingBatchReverse | BingQuery | BingQueryDetail | BingReverse | CanadapostQuery | ElevationQuery | FreeGeoIPQuery | GaodeQuery | GaodeReverse | GeocodeFarmReverse | GeolyticaQuery | GeonamesChildren | GeonamesDetails | GeonamesHierarchy | GeonamesQuery | GisgraphyQuery | GisgraphyReverse | GoogleQuery | GoogleReverse | HereQuery | HereReverse | IpinfoQuery | KomootQuery | KomootReverse | LocationIQQuery | LocationIQReverse | MapboxQuery | MapboxReverse | MapquestBatch | MapquestQuery | MapquestReverse | MapzenQuery | MapzenReverse | MaxmindQuery | OpenCageQuery | OpenCageReverse | OsmQuery | OsmQueryDetail | OsmReverse | OttawaQuery | TamuQuery | TgosQuery | TimezoneQuery | TomtomQuery | USCensusBatch | USCensusQuery | USCensusReverse | W3WQuery | W3WReverse | YahooQuery | YandexQuery | YandexReverse | GeocodeFarmQuery | PlacesQuery:
    """IP Address lookup

    :param ``location``: Your search IP Address you want geocoded.
    :param ``location``: (optional) if left blank will return your
                                current IP address's location.
    """
    ...

def canadapost(location, **kwargs): # -> ArcgisQuery | ArcgisReverse | BaiduQuery | BaiduReverse | BingBatchForward | BingBatchReverse | BingQuery | BingQueryDetail | BingReverse | CanadapostQuery | ElevationQuery | FreeGeoIPQuery | GaodeQuery | GaodeReverse | GeocodeFarmReverse | GeolyticaQuery | GeonamesChildren | GeonamesDetails | GeonamesHierarchy | GeonamesQuery | GisgraphyQuery | GisgraphyReverse | GoogleQuery | GoogleReverse | HereQuery | HereReverse | IpinfoQuery | KomootQuery | KomootReverse | LocationIQQuery | LocationIQReverse | MapboxQuery | MapboxReverse | MapquestBatch | MapquestQuery | MapquestReverse | MapzenQuery | MapzenReverse | MaxmindQuery | OpenCageQuery | OpenCageReverse | OsmQuery | OsmQueryDetail | OsmReverse | OttawaQuery | TamuQuery | TgosQuery | TimezoneQuery | TomtomQuery | USCensusBatch | USCensusQuery | USCensusReverse | W3WQuery | W3WReverse | YahooQuery | YandexQuery | YandexReverse | GeocodeFarmQuery | PlacesQuery:
    """CanadaPost Provider

    :param ``location``: Your search location you want geocoded.
    :param ``key``: (optional) API Key from CanadaPost Address Complete.
    :param ``language``: (default=en) Output language preference.
    :param ``country``: (default=ca) Geofenced query by country.
    :param ``maxRows``: (default=1) Max number of results to fetch
    """
    ...

def postal(location, **kwargs): # -> ArcgisQuery | ArcgisReverse | BaiduQuery | BaiduReverse | BingBatchForward | BingBatchReverse | BingQuery | BingQueryDetail | BingReverse | CanadapostQuery | ElevationQuery | FreeGeoIPQuery | GaodeQuery | GaodeReverse | GeocodeFarmReverse | GeolyticaQuery | GeonamesChildren | GeonamesDetails | GeonamesHierarchy | GeonamesQuery | GisgraphyQuery | GisgraphyReverse | GoogleQuery | GoogleReverse | HereQuery | HereReverse | IpinfoQuery | KomootQuery | KomootReverse | LocationIQQuery | LocationIQReverse | MapboxQuery | MapboxReverse | MapquestBatch | MapquestQuery | MapquestReverse | MapzenQuery | MapzenReverse | MaxmindQuery | OpenCageQuery | OpenCageReverse | OsmQuery | OsmQueryDetail | OsmReverse | OttawaQuery | TamuQuery | TgosQuery | TimezoneQuery | TomtomQuery | USCensusBatch | USCensusQuery | USCensusReverse | W3WQuery | W3WReverse | YahooQuery | YandexQuery | YandexReverse | GeocodeFarmQuery | PlacesQuery:
    """CanadaPost Provider

    :param ``location``: Your search location you want geocoded.
    :param ``key``: (optional) use your own API Key from
                               CanadaPost Address Complete.
    """
    ...

def geonames(location, **kwargs): # -> ArcgisQuery | ArcgisReverse | BaiduQuery | BaiduReverse | BingBatchForward | BingBatchReverse | BingQuery | BingQueryDetail | BingReverse | CanadapostQuery | ElevationQuery | FreeGeoIPQuery | GaodeQuery | GaodeReverse | GeocodeFarmReverse | GeolyticaQuery | GeonamesChildren | GeonamesDetails | GeonamesHierarchy | GeonamesQuery | GisgraphyQuery | GisgraphyReverse | GoogleQuery | GoogleReverse | HereQuery | HereReverse | IpinfoQuery | KomootQuery | KomootReverse | LocationIQQuery | LocationIQReverse | MapboxQuery | MapboxReverse | MapquestBatch | MapquestQuery | MapquestReverse | MapzenQuery | MapzenReverse | MaxmindQuery | OpenCageQuery | OpenCageReverse | OsmQuery | OsmQueryDetail | OsmReverse | OttawaQuery | TamuQuery | TgosQuery | TimezoneQuery | TomtomQuery | USCensusBatch | USCensusQuery | USCensusReverse | W3WQuery | W3WReverse | YahooQuery | YandexQuery | YandexReverse | GeocodeFarmQuery | PlacesQuery:
    """GeoNames Provider

    :param ``location``: Your search location you want geocoded.
    :param ``geonameid``: The place you want children / hierarchy for.
    :param ``key``: (required) geonames *username*: needs to be passed with each request.
    :param ``maxRows``: (default=1) Max number of results to fetch
    :param ``proximity``: Search within given area (bbox, bounds, or around latlng)
    :param ``method``: (default=geocode) Use the following:
        > geocode
        > details (mainly for administrive data and timezone)
        > timezone (alias for details)
        > children
        > hierarchy
    """
    ...

def mapzen(location, **kwargs): # -> ArcgisQuery | ArcgisReverse | BaiduQuery | BaiduReverse | BingBatchForward | BingBatchReverse | BingQuery | BingQueryDetail | BingReverse | CanadapostQuery | ElevationQuery | FreeGeoIPQuery | GaodeQuery | GaodeReverse | GeocodeFarmReverse | GeolyticaQuery | GeonamesChildren | GeonamesDetails | GeonamesHierarchy | GeonamesQuery | GisgraphyQuery | GisgraphyReverse | GoogleQuery | GoogleReverse | HereQuery | HereReverse | IpinfoQuery | KomootQuery | KomootReverse | LocationIQQuery | LocationIQReverse | MapboxQuery | MapboxReverse | MapquestBatch | MapquestQuery | MapquestReverse | MapzenQuery | MapzenReverse | MaxmindQuery | OpenCageQuery | OpenCageReverse | OsmQuery | OsmQueryDetail | OsmReverse | OttawaQuery | TamuQuery | TgosQuery | TimezoneQuery | TomtomQuery | USCensusBatch | USCensusQuery | USCensusReverse | W3WQuery | W3WReverse | YahooQuery | YandexQuery | YandexReverse | GeocodeFarmQuery | PlacesQuery:
    """Mapzen Provider

    :param ``location``: Your search location you want geocoded.
    :param ``maxRows``: (default=1) Max number of results to fetch
    """
    ...

def tamu(location, **kwargs): # -> ArcgisQuery | ArcgisReverse | BaiduQuery | BaiduReverse | BingBatchForward | BingBatchReverse | BingQuery | BingQueryDetail | BingReverse | CanadapostQuery | ElevationQuery | FreeGeoIPQuery | GaodeQuery | GaodeReverse | GeocodeFarmReverse | GeolyticaQuery | GeonamesChildren | GeonamesDetails | GeonamesHierarchy | GeonamesQuery | GisgraphyQuery | GisgraphyReverse | GoogleQuery | GoogleReverse | HereQuery | HereReverse | IpinfoQuery | KomootQuery | KomootReverse | LocationIQQuery | LocationIQReverse | MapboxQuery | MapboxReverse | MapquestBatch | MapquestQuery | MapquestReverse | MapzenQuery | MapzenReverse | MaxmindQuery | OpenCageQuery | OpenCageReverse | OsmQuery | OsmQueryDetail | OsmReverse | OttawaQuery | TamuQuery | TgosQuery | TimezoneQuery | TomtomQuery | USCensusBatch | USCensusQuery | USCensusReverse | W3WQuery | W3WReverse | YahooQuery | YandexQuery | YandexReverse | GeocodeFarmQuery | PlacesQuery:
    """TAMU Provider

    Params
    ------
    :param ``location``: The street address of the location you want geocoded.
    :param ``city``: The city of the location to geocode.
    :param ``state``: The state of the location to geocode.
    :param ``zipcode``: The zipcode of the location to geocode.
    :param ``key``: The API key (use API key "demo" for testing).

    API Reference
    -------------
    https://geoservices.tamu.edu/Services/Geocode/WebService
    """
    ...

def geocodefarm(location, **kwargs): # -> ArcgisQuery | ArcgisReverse | BaiduQuery | BaiduReverse | BingBatchForward | BingBatchReverse | BingQuery | BingQueryDetail | BingReverse | CanadapostQuery | ElevationQuery | FreeGeoIPQuery | GaodeQuery | GaodeReverse | GeocodeFarmReverse | GeolyticaQuery | GeonamesChildren | GeonamesDetails | GeonamesHierarchy | GeonamesQuery | GisgraphyQuery | GisgraphyReverse | GoogleQuery | GoogleReverse | HereQuery | HereReverse | IpinfoQuery | KomootQuery | KomootReverse | LocationIQQuery | LocationIQReverse | MapboxQuery | MapboxReverse | MapquestBatch | MapquestQuery | MapquestReverse | MapzenQuery | MapzenReverse | MaxmindQuery | OpenCageQuery | OpenCageReverse | OsmQuery | OsmQueryDetail | OsmReverse | OttawaQuery | TamuQuery | TgosQuery | TimezoneQuery | TomtomQuery | USCensusBatch | USCensusQuery | USCensusReverse | W3WQuery | W3WReverse | YahooQuery | YandexQuery | YandexReverse | GeocodeFarmQuery | PlacesQuery:
    """GeocodeFarm Provider

    Params
    ------
    :param ``location``: The string to search for. Usually a street address.
    :param ``key``: (optional) API Key. Only Required for Paid Users.
    :param ``lang``: (optional) 2 digit language code to return results in. Currently only "en"(English) or "de"(German) supported.
    :param ``country``: (optional) The country to return results in. Used for biasing purposes and may not fully filter results to this specific country.
    :param ``maxRows``: (default=1) Max number of results to fetch

    API Reference
    -------------
    https://geocode.farm/geocoding/free-api-documentation/
    """
    ...

def tgos(location, **kwargs): # -> ArcgisQuery | ArcgisReverse | BaiduQuery | BaiduReverse | BingBatchForward | BingBatchReverse | BingQuery | BingQueryDetail | BingReverse | CanadapostQuery | ElevationQuery | FreeGeoIPQuery | GaodeQuery | GaodeReverse | GeocodeFarmReverse | GeolyticaQuery | GeonamesChildren | GeonamesDetails | GeonamesHierarchy | GeonamesQuery | GisgraphyQuery | GisgraphyReverse | GoogleQuery | GoogleReverse | HereQuery | HereReverse | IpinfoQuery | KomootQuery | KomootReverse | LocationIQQuery | LocationIQReverse | MapboxQuery | MapboxReverse | MapquestBatch | MapquestQuery | MapquestReverse | MapzenQuery | MapzenReverse | MaxmindQuery | OpenCageQuery | OpenCageReverse | OsmQuery | OsmQueryDetail | OsmReverse | OttawaQuery | TamuQuery | TgosQuery | TimezoneQuery | TomtomQuery | USCensusBatch | USCensusQuery | USCensusReverse | W3WQuery | W3WReverse | YahooQuery | YandexQuery | YandexReverse | GeocodeFarmQuery | PlacesQuery:
    """TGOS Provider

    :param ``location``: Your search location you want geocoded.
    :param ``language``: (default=taiwan) Use the following:
        > taiwan
        > english
        > chinese
    :param ``method``: (default=geocode) Use the following:
        > geocode

    API Reference
    -------------
    http://api.tgos.nat.gov.tw/TGOS_MAP_API/Web/Default.aspx
    """
    ...

def uscensus(location, **kwargs): # -> ArcgisQuery | ArcgisReverse | BaiduQuery | BaiduReverse | BingBatchForward | BingBatchReverse | BingQuery | BingQueryDetail | BingReverse | CanadapostQuery | ElevationQuery | FreeGeoIPQuery | GaodeQuery | GaodeReverse | GeocodeFarmReverse | GeolyticaQuery | GeonamesChildren | GeonamesDetails | GeonamesHierarchy | GeonamesQuery | GisgraphyQuery | GisgraphyReverse | GoogleQuery | GoogleReverse | HereQuery | HereReverse | IpinfoQuery | KomootQuery | KomootReverse | LocationIQQuery | LocationIQReverse | MapboxQuery | MapboxReverse | MapquestBatch | MapquestQuery | MapquestReverse | MapzenQuery | MapzenReverse | MaxmindQuery | OpenCageQuery | OpenCageReverse | OsmQuery | OsmQueryDetail | OsmReverse | OttawaQuery | TamuQuery | TgosQuery | TimezoneQuery | TomtomQuery | USCensusBatch | USCensusQuery | USCensusReverse | W3WQuery | W3WReverse | YahooQuery | YandexQuery | YandexReverse | GeocodeFarmQuery | PlacesQuery:
    """US Census Provider

    Params
    ------
    :param ``location``: Your search location(s) you want geocoded.
    :param ``benchmark``: (default=4) Use the following:
        > Public_AR_Current or 4
        > Public_AR_ACSYYYY or 8
        > Public_AR_Census2010 or 9
    :param ``vintage``: (default=4, not available with batch method) Use the following:
        > Current_Current or 4
        > Census2010_Current or 410
        > ACS2013_Current or 413
        > ACS2014_Current or 414
        > ACS2015_Current or 415
        > Current_ACS2015 or 8
        > Census2010_ACS2015 or 810
        > ACS2013_ACS2015 or 813
        > ACS2014_ACS2015 or 814
        > ACS2015_ACS2015 or 815
        > Census2010_Census2010 or 910
        > Census2000_Census2010 or 900
    :param ``method``: (default=geocode) Use the following:
        > geocode
        > reverse
        > batch

    API Reference
    -------------
    https://geocoding.geo.census.gov/geocoder/Geocoding_Services_API.pdf
    """
    ...

def locationiq(location, **kwargs): # -> ArcgisQuery | ArcgisReverse | BaiduQuery | BaiduReverse | BingBatchForward | BingBatchReverse | BingQuery | BingQueryDetail | BingReverse | CanadapostQuery | ElevationQuery | FreeGeoIPQuery | GaodeQuery | GaodeReverse | GeocodeFarmReverse | GeolyticaQuery | GeonamesChildren | GeonamesDetails | GeonamesHierarchy | GeonamesQuery | GisgraphyQuery | GisgraphyReverse | GoogleQuery | GoogleReverse | HereQuery | HereReverse | IpinfoQuery | KomootQuery | KomootReverse | LocationIQQuery | LocationIQReverse | MapboxQuery | MapboxReverse | MapquestBatch | MapquestQuery | MapquestReverse | MapzenQuery | MapzenReverse | MaxmindQuery | OpenCageQuery | OpenCageReverse | OsmQuery | OsmQueryDetail | OsmReverse | OttawaQuery | TamuQuery | TgosQuery | TimezoneQuery | TomtomQuery | USCensusBatch | USCensusQuery | USCensusReverse | W3WQuery | W3WReverse | YahooQuery | YandexQuery | YandexReverse | GeocodeFarmQuery | PlacesQuery:
    """LocationIQ Provider

    Params
    ------
    :param ``location``: Your search location you want geocoded.
    :param ``method``: (default=geocode) Use the following:
        > geocode
        > reverse

    API Reference
    -------------
    https://locationiq.org/
    """
    ...

def gisgraphy(location, **kwargs): # -> ArcgisQuery | ArcgisReverse | BaiduQuery | BaiduReverse | BingBatchForward | BingBatchReverse | BingQuery | BingQueryDetail | BingReverse | CanadapostQuery | ElevationQuery | FreeGeoIPQuery | GaodeQuery | GaodeReverse | GeocodeFarmReverse | GeolyticaQuery | GeonamesChildren | GeonamesDetails | GeonamesHierarchy | GeonamesQuery | GisgraphyQuery | GisgraphyReverse | GoogleQuery | GoogleReverse | HereQuery | HereReverse | IpinfoQuery | KomootQuery | KomootReverse | LocationIQQuery | LocationIQReverse | MapboxQuery | MapboxReverse | MapquestBatch | MapquestQuery | MapquestReverse | MapzenQuery | MapzenReverse | MaxmindQuery | OpenCageQuery | OpenCageReverse | OsmQuery | OsmQueryDetail | OsmReverse | OttawaQuery | TamuQuery | TgosQuery | TimezoneQuery | TomtomQuery | USCensusBatch | USCensusQuery | USCensusReverse | W3WQuery | W3WReverse | YahooQuery | YandexQuery | YandexReverse | GeocodeFarmQuery | PlacesQuery:
    """Gisgraphy Provider

    :param ``location``: Your search location you want geocoded.
    """
    ...

