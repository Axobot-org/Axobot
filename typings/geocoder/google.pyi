"""
This type stub file was generated by pyright.
"""

import ratelim
from geocoder.base import MultipleResultsQuery, OneResult

class GoogleResult(OneResult):
    def __init__(self, json_content) -> None:
        ...

    @property
    def lat(self):
        ...

    @property
    def lng(self):
        ...

    @property
    def place(self):
        ...

    @property
    def quality(self): # -> None:
        ...

    @property
    def accuracy(self):
        ...

    @property
    def bbox(self): # -> dict[str, list[float]] | dict[Any, Any]:
        ...

    @property
    def address(self):
        ...

    @property
    def postal(self):
        ...

    @property
    def subpremise(self):
        ...

    @property
    def housenumber(self):
        ...

    @property
    def street(self):
        ...

    @property
    def street_long(self):
        ...

    @property
    def road_long(self):
        ...

    @property
    def neighborhood(self):
        ...

    @property
    def sublocality(self):
        ...

    @property
    def city(self):
        ...

    @property
    def city_long(self):
        ...

    @property
    def postal_town(self):
        ...

    @property
    def postal_town_long(self):
        ...

    @property
    def county(self):
        ...

    @property
    def state(self):
        ...

    @property
    def state_long(self):
        ...

    @property
    def province_long(self):
        ...

    @property
    def country(self):
        ...

    @property
    def country_long(self):
        ...



class GoogleQuery(MultipleResultsQuery):
    """
    Google Geocoding API
    ====================
    Geocoding is the process of converting addresses into geographic
    coordinates (like latitude 37.423021 and longitude -122.083739),
    which you can use to place markers or position the map.
    API Reference
    -------------
    https://developers.google.com/maps/documentation/geocoding

    For ambiguous queries or 'nearby' type queries, use the Places Text Search instead.
    https://developers.google.com/maps/documentation/geocoding/best-practices#automated-system

    Parameters
    ----------
    :param location: Your search location you want geocoded.
    :param components: Component Filtering
    :param method: (default=geocode) Use the following:
        > geocode
        > places
        > reverse
        > timezone
        > elevation
    :param key: Your Google developers free key.
    :param language: 2-letter code of preferred language of returned address elements.
    :param client: Google for Work client ID. Use with client_secret. Cannot use with key parameter
    :param client_secret: Google for Work client secret. Use with client.
    """
    provider = ...
    method = ...
    _URL = ...
    _RESULT_CLASS = GoogleResult
    _KEY = ...
    _KEY_MANDATORY = ...
    def rate_limited_get(self, *args, **kwargs): # -> Callable[..., Any]:
        ...

    @ratelim.greedy(2500, 60 * 60 * 24)
    @ratelim.greedy(10, 1)
    def rate_limited_get_for_dev(self, *args, **kwargs):
        ...

    @ratelim.greedy(100000, 60 * 60 * 24)
    @ratelim.greedy(50, 1)
    def rate_limited_get_for_work(self, *args, **kwargs):
        ...



if __name__ == '__main__':
    g = ...
