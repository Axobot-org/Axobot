"""
This type stub file was generated by pyright.
"""

from geocoder.base import MultipleResultsQuery, OneResult

class OsmResult(OneResult):
    def __init__(self, json_content) -> None:
        ...

    @property
    def lat(self): # -> float | None:
        ...

    @property
    def lng(self): # -> float | None:
        ...

    @property
    def bbox(self): # -> dict[str, list[float]] | dict[Any, Any] | None:
        ...

    @property
    def address(self):
        ...

    @property
    def housenumber(self):
        ...

    @property
    def street(self):
        ...

    @property
    def postal(self):
        ...

    @property
    def neighborhood(self):
        """place=neighborhood

        A named part of a place=village, a place=town or a place=city. Smaller
        than place=suburb and place=quarter.

        The tag can be used for any kind of landuse or mix of landuse (such as
        residential, commercial, industrial etc). Usage of this term depends
        greatly on local history, culture, politics, economy and organization
        of settlements. More specific rules are intentionally avoided.

        Note: the British English spelling is used rather than the
              American English spelling of neighborhood.
        """
        ...

    @property
    def suburb(self):
        """place=suburb

        A distinct section of an urban settlement (city, town, etc.) with its
        own name and identity. e.g.

        - annexed towns or villages which were formerly independent,
        - independent (or dependent) municipalities within a city or next to a
          much bigger town
        - historical districts of settlements
        - industrial districts or recreation areas within a settlements with
          specific names.
        """
        ...

    @property
    def quarter(self):
        """place=quarter

        A named part of a bigger settlement where this part is smaller than
        a suburb and bigger than a neighbourhood. This does not have to be
        an administrative entity.

        The term quarter is sometimes used synonymously for neighbourhood.
        """
        ...

    @property
    def allotments(self):
        """place=allotments

        Dacha or cottage settlement, which is located outside other
        inhabited locality. This value is used mainly in Russia and other
        countries of the former Soviet Union, where a lot of such unofficial
        settlements exist
        """
        ...

    @property
    def farm(self):
        """place=farm

        A farm that has its own name. If the farm is not a part of bigger
        settlement use place=isolated_dwelling. See also landuse=farmyard
        """
        ...

    @property
    def locality(self):
        """place=isolated_dwelling

        For an unpopulated named place.
        """
        ...

    @property
    def isolated_dwelling(self):
        """place=isolated_dwelling

        Smallest kind of human settlement. No more than 2 households.
        """
        ...

    @property
    def hamlet(self):
        """place=hamlet

        A smaller rural community typically with less than 100-200 inhabitants,
        few infrastructure.
        """
        ...

    @property
    def village(self):
        """place=village

        A smaller distinct settlement, smaller than a town with few facilities
        available with people traveling to nearby towns to access these.
        Populations of villages vary widely in different territories but will
        nearly always be less than 10,000 people, often a lot less.

        See place=neighbourhood on how to tag divisions within a larger village
        """
        ...

    @property
    def town(self):
        """place=town

        A second tier urban settlement of local importance, often with a
        population of 10,000 people and good range of local facilities
        including schools, medical facilities etc and traditionally a market.
        In areas of low population, towns may have significantly
        lower populations.

        See place=neighbourhood and possibly also place=suburb on how to tag
        divisions within a town.
        """
        ...

    @property
    def island(self):
        """place=island

        Identifies the coastline of an island (> 1 km2), also consider
        place=islet for very small islandsIdentifies the coastline of an
        island (> 1 km2), also consider place=islet for very small islands
        """
        ...

    @property
    def city(self):
        """place=city

        The largest urban settlements in the territory, normally including the
        national, state and provincial capitals. These are defined by charter
        or other governmental designation in some territories and are a matter
        of judgement in others. Should normally have a population of at
        least 100,000 people and be larger than nearby towns.

        See place=suburb and place=neighbourhood on how to tag divisions
        within a city. The outskirts of urban settlements may or may not match
        the administratively declared boundary of the city.
        """
        ...

    @property
    def municipality(self):
        """admin_level=8"""
        ...

    @property
    def county(self):
        """admin_level=6"""
        ...

    @property
    def district(self):
        """admin_level=5/6"""
        ...

    @property
    def state(self):
        """admin_level=4"""
        ...

    @property
    def region(self):
        """admin_level=3"""
        ...

    @property
    def country(self):
        """admin_level=2"""
        ...

    @property
    def country_code(self):
        """admin_level=2"""
        ...

    @property
    def accuracy(self):
        ...

    @property
    def quality(self):
        ...

    @property
    def population(self):
        ...

    @property
    def license(self):
        ...

    @property
    def type(self):
        ...

    @property
    def importance(self):
        ...

    @property
    def icon(self):
        ...

    @property
    def osm_type(self):
        ...

    @property
    def osm_id(self):
        ...

    @property
    def place_id(self):
        ...

    @property
    def place_rank(self):
        ...



class OsmQuery(MultipleResultsQuery):
    """
    Nominatim
    =========
    Nominatim (from the Latin, 'by name') is a tool to search OSM data by name
    and address and to generate synthetic addresses of OSM points (reverse geocoding).

    API Reference
    -------------
    http://wiki.openstreetmap.org/wiki/Nominatim
    """
    provider = ...
    method = ...
    _URL = ...
    _RESULT_CLASS = OsmResult
    _KEY_MANDATORY = ...


class OsmQueryDetail(MultipleResultsQuery):
    """
    Nominatim
    =========
    Nominatim (from the Latin, 'by name') is a tool to search OSM data by name
    and address and to generate synthetic addresses of OSM points (reverse geocoding).

    API Reference
    -------------
    http://wiki.openstreetmap.org/wiki/Nominatim
    """
    provider = ...
    method = ...
    _URL = ...
    _RESULT_CLASS = OsmResult
    _KEY_MANDATORY = ...


if __name__ == '__main__':
    g = ...
    g = ...
